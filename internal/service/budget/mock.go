// Code generated by mockery v2.53.5. DO NOT EDIT.

package budget

import (
	models "github.com/go-park-mail-ru/2025_2_VKarmane/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// MockBudgetService is an autogenerated mock type for the BudgetService type
type MockBudgetService struct {
	mock.Mock
}

// GetBudgetsForUser provides a mock function with given fields: userID
func (_m *MockBudgetService) GetBudgetsForUser(userID int) ([]models.Budget, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetBudgetsForUser")
	}

	var r0 []models.Budget
	var r1 error
	if rf, ok := ret.Get(0).(func(int) ([]models.Budget, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(int) []models.Budget); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Budget)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockBudgetService creates a new instance of MockBudgetService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBudgetService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBudgetService {
	mock := &MockBudgetService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
